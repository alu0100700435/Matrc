var search_data = {"index":{"searchIndex":["matdispentero","matdispfraction","matentero","matenterod","matfraction","matfractiond","matrc","fraction","matrizdensa","matrizdispersa","matriz","mihash","testmatrizdensa","testmatrizdispersa","%()","*()","*()","+()","+()","-()","-()","-@()","/()","<=>()","==()","==()","[]()","[]()","[]=()","[]=()","abs()","coerce()","each()","encontrar()","eql?()","gcd()","hash()","max()","min()","new()","new()","new()","new()","new()","reciprocal()","setup()","setup()","tear_down()","test_failure()","test_failure()","test_simple()","test_simple()","test_type()","to_float()","to_s()","to_string()","zero()","zero()","zero()","zero()","zero()","zero()","gemfile","gemfile.lock","guardfile","license","readme","rakefile","created.rid","matriz.rb~","matrc.gemspec","matrices_spec.rb~"],"longSearchIndex":["matdispentero","matdispfraction","matentero","matenterod","matfraction","matfractiond","matrc","matrc::fraction","matrc::matrizdensa","matrc::matrizdispersa","matriz","mihash","testmatrizdensa","testmatrizdispersa","matrc::fraction#%()","matrc::fraction#*()","matriz#*()","matrc::fraction#+()","matriz#+()","matrc::fraction#-()","matriz#-()","matrc::fraction#-@()","matrc::fraction#/()","matrc::fraction#<=>()","matriz#==()","mihash#==()","matrc::matrizdensa#[]()","matrc::matrizdispersa#[]()","matrc::matrizdensa#[]=()","matrc::matrizdispersa#[]=()","matrc::fraction#abs()","matrc::fraction#coerce()","matriz#each()","matriz#encontrar()","mihash#eql?()","matrc::fraction#gcd()","mihash#hash()","matriz#max()","matriz#min()","matrc::fraction::new()","matrc::matrizdensa::new()","matrc::matrizdispersa::new()","matriz::new()","mihash::new()","matrc::fraction#reciprocal()","testmatrizdensa#setup()","testmatrizdispersa#setup()","testmatrizdensa#tear_down()","testmatrizdensa#test_failure()","testmatrizdispersa#test_failure()","testmatrizdensa#test_simple()","testmatrizdispersa#test_simple()","testmatrizdensa#test_type()","matrc::fraction#to_float()","matriz#to_s()","matrc::fraction#to_string()","matdispentero#zero()","matdispfraction#zero()","matentero#zero()","matenterod#zero()","matfraction#zero()","matfractiond#zero()","","","","","","","","","",""],"info":[["MatDispEntero","","MatDispEntero.html","","<p>clase que hereda de MatrizDispersa\n"],["MatDispFraction","","MatDispFraction.html","","<p>clase que hereda de MatrizDispersa\n"],["MatEntero","","MatEntero.html","","<p>clase que hereda de MatrizDensa\n<p>clase que herada de MatrizDensa\n"],["MatEnterod","","MatEnterod.html","","<p>clase que hereda de la MatrizDispersa\n"],["MatFraction","","MatFraction.html","","<p>clase que hereda de MatrizDensa\n<p>clase que herada de MatrizDensa\n"],["MatFractiond","","MatFractiond.html","","<p>clase que hereda de la MatrizDispersa\n"],["Matrc","","Matrc.html","","<p>Clase Fraccion que permitira el uso de racionales en la matrices\n<p>clase matriz densa\n<p>clase matriz dispersa …\n"],["Matrc::Fraction","","Matrc/Fraction.html","",""],["Matrc::MatrizDensa","","Matrc/MatrizDensa.html","",""],["Matrc::MatrizDispersa","","Matrc/MatrizDispersa.html","",""],["Matriz","","Matriz.html","","<p>Clase matriz, que permitira realizar operaciones con matrices\n"],["MiHash","","MiHash.html","","<p>Clase “posicion” de la matriz dispersa\n"],["TestMatrizDensa","","TestMatrizDensa.html","",""],["TestMatrizDispersa","","TestMatrizDispersa.html","",""],["%","Matrc::Fraction","Matrc/Fraction.html#method-i-25","(other)","<p>metodo que calcula el resto de la división de dos fracciones, o una\nfraccion con un nº natural\n"],["*","Matrc::Fraction","Matrc/Fraction.html#method-i-2A","(other)","<p>metodo que multiplica dos fracciones, o una fraccion con un nº natural\n"],["*","Matriz","Matriz.html#method-i-2A","(other)","<p>metodo que multiplica matrices\n"],["+","Matrc::Fraction","Matrc/Fraction.html#method-i-2B","(other)","<p>metodo que suma dos fracciones, o una fraccion con un nº natural\n"],["+","Matriz","Matriz.html#method-i-2B","(other)","<p>metodo que suma matrices\n"],["-","Matrc::Fraction","Matrc/Fraction.html#method-i-2D","(other)","<p>metodo que resta dos fracciones, o una fraccion con un nº natural\n"],["-","Matriz","Matriz.html#method-i-2D","(other)","<p>metodo que resta matrices\n"],["-@","Matrc::Fraction","Matrc/Fraction.html#method-i-2D-40","()","<p>metodo que devuelve el opuesto\n"],["/","Matrc::Fraction","Matrc/Fraction.html#method-i-2F","(other)","<p>metodo que divide dos fracciones, o una fraccion con un nº natural\n"],["<=>","Matrc::Fraction","Matrc/Fraction.html#method-i-3C-3D-3E","(other)","<p>metodo que compara dos fracciones, o una fraccion y un nº natural\n"],["==","Matriz","Matriz.html#method-i-3D-3D","(other)","<p>metodo que hace comparaciones de igualdad entre dos matrices\n"],["==","MiHash","MiHash.html#method-i-3D-3D","(other)","<p>metodo de comparacion\n"],["[]","Matrc::MatrizDensa","Matrc/MatrizDensa.html#method-i-5B-5D","(row,col=nil)","<p>sobrecarga de []\n"],["[]","Matrc::MatrizDispersa","Matrc/MatrizDispersa.html#method-i-5B-5D","(row, col)","<p>sobrecarga de []\n"],["[]=","Matrc::MatrizDensa","Matrc/MatrizDensa.html#method-i-5B-5D-3D","(row,col=nil,val)","<p>sobrecarga de []=\n"],["[]=","Matrc::MatrizDispersa","Matrc/MatrizDispersa.html#method-i-5B-5D-3D","(row, col, val)","<p>sobrecarga de []=\n"],["abs","Matrc::Fraction","Matrc/Fraction.html#method-i-abs","()","<p>metodo que devuelve el valor absoluto\n"],["coerce","Matrc::Fraction","Matrc/Fraction.html#method-i-coerce","(other)","<p>metodo que permite la permutación de operandos\n"],["each","Matriz","Matriz.html#method-i-each","()","<p>metodo para poder usar el modulo Enumerable\n"],["encontrar","Matriz","Matriz.html#method-i-encontrar","()",""],["eql?","MiHash","MiHash.html#method-i-eql-3F","(other)","<p>compara si los elementos son del mismo tipo y mismo valor\n"],["gcd","Matrc::Fraction","Matrc/Fraction.html#method-i-gcd","(u, v)","<p>metodo que calcula el maximo comun divisor\n"],["hash","MiHash","MiHash.html#method-i-hash","()",""],["max","Matriz","Matriz.html#method-i-max","()","<p>metodo que calcula el elemento de mayor valor dentro de la matriz\n"],["min","Matriz","Matriz.html#method-i-min","()","<p>metodo que calcula el elemento de menor valor dentro de la matriz\n"],["new","Matrc::Fraction","Matrc/Fraction.html#method-c-new","(num, den)","<p>metodo de inicializacion de variables\n"],["new","Matrc::MatrizDensa","Matrc/MatrizDensa.html#method-c-new","(row,col)","<p>inicializacion de variables\n"],["new","Matrc::MatrizDispersa","Matrc/MatrizDispersa.html#method-c-new","(row, col)","<p>inicializacion de variables\n"],["new","Matriz","Matriz.html#method-c-new","(row,col)","<p>metodo de inicialización de variables\n"],["new","MiHash","MiHash.html#method-c-new","(r,c)","<p>inicializacion de variables\n"],["reciprocal","Matrc::Fraction","Matrc/Fraction.html#method-i-reciprocal","()","<p>metodo que devuelve el reciproco\n"],["setup","TestMatrizDensa","TestMatrizDensa.html#method-i-setup","()","<p>metodo que creara los elementos de matrices densas, con los que se testeara\n"],["setup","TestMatrizDispersa","TestMatrizDispersa.html#method-i-setup","()","<p>metodo que creara los elementos con matrices dispersas, con los que se\ntesteara\n"],["tear_down","TestMatrizDensa","TestMatrizDensa.html#method-i-tear_down","()",""],["test_failure","TestMatrizDensa","TestMatrizDensa.html#method-i-test_failure","()","<p>metodo de los test de fallos(MatrizDensa)\n"],["test_failure","TestMatrizDispersa","TestMatrizDispersa.html#method-i-test_failure","()","<p>metodo de los test de fallos(MatrizDispersa)\n"],["test_simple","TestMatrizDensa","TestMatrizDensa.html#method-i-test_simple","()","<p>Metodo que contiene los diversos test simples (MatrizDensa)\n"],["test_simple","TestMatrizDispersa","TestMatrizDispersa.html#method-i-test_simple","()","<p>Metodo que contiene los diversos test simples(MatrizDispersa)\n"],["test_type","TestMatrizDensa","TestMatrizDensa.html#method-i-test_type","()","<p>metodo de los test de tipo(MatrizDensa)\n"],["to_float","Matrc::Fraction","Matrc/Fraction.html#method-i-to_float","()","<p>metodo que muestra la fraccion en flotante\n"],["to_s","Matriz","Matriz.html#method-i-to_s","()","<p>metodo que muestra en string la matriz\n"],["to_string","Matrc::Fraction","Matrc/Fraction.html#method-i-to_string","()","<p>metodo que muestra la fraccion en string\n"],["zero","MatDispEntero","MatDispEntero.html#method-i-zero","()","<p>definicion del elemento nulo\n"],["zero","MatDispFraction","MatDispFraction.html#method-i-zero","()","<p>definicion del elemento nulo\n"],["zero","MatEntero","MatEntero.html#method-i-zero","()","<p>definicion del elemento nulo\n"],["zero","MatEnterod","MatEnterod.html#method-i-zero","()","<p>definicion del elemento nulo\n"],["zero","MatFraction","MatFraction.html#method-i-zero","()","<p>definicion del elemento nulo\n"],["zero","MatFractiond","MatFractiond.html#method-i-zero","()","<p>definicion del elemento nulo\n"],["Gemfile","","Gemfile.html","","<p>source &#39;rubygems.org&#39;\n<p># Specify your gem&#39;s dependencies in matrc.gemspec gemspec\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>PATH\n\n<pre>remote: .\nspecs:\n  matrc (0.0.1)</pre>\n<p>GEM\n"],["Guardfile","","Guardfile.html","","<p>guard :bundler do\n\n<pre>watch(&#39;Gemfile&#39;)\nwatch(/^.+\\.gemspec/)</pre>\n<p>end\n"],["LICENSE","","LICENSE_txt.html","","<p>Copyright © 2013 Raquel Alvarez, Carlota Lázaro\n<p>MIT License\n<p>Permission is hereby granted, free of charge, …\n"],["README","","README_md.html","","<p>Matrc\n<p>Uso de Clases que permiten resolver problemas con matrices densas y\nmatrices dispersas.\n<p>Instalación …\n"],["Rakefile","","Rakefile.html","","<p>require &#39;bundler/gem_tasks&#39;\n<p>require &#39;rspec/core/rake_task&#39; RSpec::Core::RakeTask.new\n<p>task …\n"],["created.rid","","doc/created_rid.html","",""],["matriz.rb~","","lib/matrc/matriz_rb~.html","","<p>#Clase matriz, que permitira realizar operaciones con matrices class Matriz\n\n<pre> attr_reader :row, :col\n\n ...</pre>\n"],["matrc.gemspec","","matrc_gemspec.html","","<p>lib = File.expand_path(&#39;../lib&#39;, __FILE__) $LOAD_PATH.unshift(lib)\nunless $LOAD_PATH.include?(lib) …\n"],["matrices_spec.rb~","","spec/matrices_spec_rb~.html","","<p>#fichero que contiene las pruebas TDD(Test development driven)\n<p>require “matrc”\n<p>describe Matrc::MatrizDensa …\n"]]}}